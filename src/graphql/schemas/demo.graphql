
type DemoMutatedItem {
  id: ID!
  title: String!
}

type DemoSubscriptionEvent {
  message: String!
}


# --- demoQuery
input DemoQueryInput {
  name: String!
}
type DemoQueryResponseSuccess {
  message: String!
}
union DemoQueryResponse =
    DemoQueryResponseSuccess
  | ResponseError


type Query {
  demoQuery(input: DemoQueryInput!): DemoQueryResponse!
  demoPing: Ping!
}

type Mutation {
  demoMutation(title: String!): DemoMutatedItem!
  # templateMutation(input: TemplateInput!): TemplateResponse!
}

type Subscription {
  demoSubscription: DemoSubscriptionEvent!
}


# --- template
# input TemplateInput {
#   userID: UserID!
# }
# type TemplateResponseSuccess {
#   statusCode: String!
# }
# union TemplateResponse =
#     SendFriendRequestResponseSuccess
#   | ResponseError
